# Generated by Django 5.2.5 on 2025-08-14 18:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_tenants.postgresql_backend.base
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(db_index=True, max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('name', models.CharField(max_length=100, verbose_name='Nom du cabinet')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('siret', models.CharField(blank=True, max_length=14, verbose_name='SIRET')),
                ('timezone', models.CharField(default='Europe/Paris', max_length=50, verbose_name='Fuseau horaire')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('default_appointment_duration', models.IntegerField(default=30, verbose_name='Durée RDV par défaut (min)')),
                ('emergency_slots_per_day', models.IntegerField(default=2, verbose_name='Créneaux urgence/jour')),
            ],
            options={
                'verbose_name': 'Cabinet dentaire',
                'verbose_name_plural': 'Cabinets dentaires',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('DENTIST', 'Dentiste/Praticien'), ('SECRETARY', 'Secrétaire médicale'), ('ASSISTANT', 'Assistant(e) dentaire'), ('ADMIN', 'Administrateur cabinet')], max_length=20, verbose_name='Rôle')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('license_number', models.CharField(blank=True, max_length=50, verbose_name="Numéro d'ordre/licence")),
                ('speciality', models.CharField(blank=True, max_length=100, verbose_name='Spécialité')),
                ('last_password_change', models.DateTimeField(auto_now_add=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('preferred_language', models.CharField(default='fr', max_length=10, verbose_name='Langue préférée')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='core.client')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
